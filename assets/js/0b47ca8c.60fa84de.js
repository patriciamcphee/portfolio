"use strict";(self.webpackChunkclean_deploy=self.webpackChunkclean_deploy||[]).push([[6383],{86305:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>N,contentTitle:()=>h,default:()=>b,frontMatter:()=>k,metadata:()=>g,toc:()=>v});var n=a(87462),l=(a(67294),a(3905)),r=a(78462),o=a(70891),i=a(79953),d=a(18987),u=a(69661),m=a(28333),p=a(53147),s=a(91379),c=a(53156);const k={title:"CloneVolume API",description:"Written for cloud storage or data center admins to create a copy of the volume.",last_update:{date:"11/18/2022",author:"Patricia McPhee"},pagination_next:null,pagination_prev:null},h=void 0,g={unversionedId:"api/clone-volume-api",id:"api/clone-volume-api",title:"CloneVolume API",description:"Written for cloud storage or data center admins to create a copy of the volume.",source:"@site/docs/api/clone-volume-api.mdx",sourceDirName:"api",slug:"/api/clone-volume-api",permalink:"/api/clone-volume-api",draft:!1,editUrl:"https://github.com/patriciamcphee/portfolio/edit/main/docs/api/clone-volume-api.mdx",tags:[],version:"current",lastUpdatedBy:"Patricia McPhee",lastUpdatedAt:1668758400,formattedLastUpdatedAt:"Nov 18, 2022",frontMatter:{title:"CloneVolume API",description:"Written for cloud storage or data center admins to create a copy of the volume.",last_update:{date:"11/18/2022",author:"Patricia McPhee"},pagination_next:null,pagination_prev:null},sidebar:"mySidebar"},N={},v=[{value:"Parameters",id:"parameters",level:2},{value:"Return value",id:"return-value",level:2},{value:"Request example",id:"request-example",level:2},{value:"Response example",id:"response-example",level:2}],y={toc:v},f="wrapper";function b(e){let{components:t,...a}=e;return(0,l.kt)(f,(0,n.Z)({},y,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(c.Z,{mdxType:"Container"},(0,l.kt)(r.Z,{sx:{width:"100%",bgcolor:"background.paper",color:"#000000",borderRadius:4},mdxType:"List"},(0,l.kt)(o.ZP,{sx:{py:0},mdxType:"ListItem"},(0,l.kt)(d.Z,{mdxType:"ListItemAvatar"},(0,l.kt)(u.Z,{mdxType:"Avatar"},(0,l.kt)(m.Z,{mdxType:"WorkIcon"}))),(0,l.kt)(i.Z,{primary:"Project",secondary:"Work-related",mdxType:"ListItemText"})),(0,l.kt)(o.ZP,{sx:{py:0},mdxType:"ListItem"},(0,l.kt)(d.Z,{mdxType:"ListItemAvatar"},(0,l.kt)(u.Z,{mdxType:"Avatar"},(0,l.kt)(s.Z,{mdxType:"DescriptionIcon"}))),(0,l.kt)(i.Z,{primary:"Description",secondary:"Written for cloud storage or data center admins to create a copy of the volume.  ",mdxType:"ListItemText"})),(0,l.kt)(o.ZP,{sx:{py:0},mdxType:"ListItem"},(0,l.kt)(d.Z,{mdxType:"ListItemAvatar"},(0,l.kt)(u.Z,{mdxType:"Avatar"},(0,l.kt)(p.Z,{mdxType:"CalendarMonthIcon"}))),(0,l.kt)(i.Z,{primary:"Date",secondary:"June 18, 2014",mdxType:"ListItemText"})))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("p",null,"CloneVolume is used to create a copy of the volume. This method is asynchronous and may take a variable time to complete. The cloning process begins immediately when the CloneVolume request is made and is representative of the state of the volume when the API method is issued. ",(0,l.kt)("a",{parentName:"p",href:"./get-async-results"},"GetAsyncResults")," can determine when the cloning process is complete, and the new volume is available for connections. ListSyncJobs can be used to see the progress of creating the clone."),(0,l.kt)("admonition",{title:"Notes",type:"note"},(0,l.kt)("ul",{parentName:"admonition"},(0,l.kt)("li",{parentName:"ul"},"The cloned volume inherits the initial attributes and quality of service settings for the volume. If different settings are required, you can change them through ModifyVolume."),(0,l.kt)("li",{parentName:"ul"},"Cloned volumes do not inherit volume access group memberships from the source volume."))),(0,l.kt)("h2",{id:"parameters"},"Parameters"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"volumeID")),(0,l.kt)("td",{parentName:"tr",align:null},"ID of the volume to be cloned."),(0,l.kt)("td",{parentName:"tr",align:null},"Integer"),(0,l.kt)("td",{parentName:"tr",align:null},"Required")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"name")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the cloned volume. Up to 64 characters are allowed"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Required")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"newAccountID")),(0,l.kt)("td",{parentName:"tr",align:null},"AccountID for the owner of the new volume. If unspecified, the accountID is inherited from the volume cloned."),(0,l.kt)("td",{parentName:"tr",align:null},"Integer"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"newSize")),(0,l.kt)("td",{parentName:"tr",align:null},"New size, in bytes, of the volume. It may be greater or less than the size of the volume cloned. If unspecified, the volume size does not change and gets rounded to the nearest 1MB."),(0,l.kt)("td",{parentName:"tr",align:null},"Integer"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"access")),(0,l.kt)("td",{parentName:"tr",align:null},"Access allowed for the new volume. Possible values:",(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("b",null,(0,l.kt)("code",null,"readOnly")),": Only read operations allowed."),(0,l.kt)("li",null,(0,l.kt)("b",null,(0,l.kt)("code",null,"readWrite")),": Reads and writes allowed."),(0,l.kt)("li",null,(0,l.kt)("b",null,(0,l.kt)("code",null,"locked")),": No reads or writes allowed. If unspecified, the access value gets inherited from the volume cloned."),(0,l.kt)("li",null,(0,l.kt)("b",null,(0,l.kt)("code",null,"replicationTarget")),": Identify a volume as the target volume for a paired set of volumes. If the volume is not paired, the access status is ",(0,l.kt)("i",null,"blocked"),"."))," If a value is unspecified, the access value does not change."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"attributes")),(0,l.kt)("td",{parentName:"tr",align:null},"List of Name/Value pairs in JSON object format."),(0,l.kt)("td",{parentName:"tr",align:null},"JSON"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"snapshotID")),(0,l.kt)("td",{parentName:"tr",align:null},"ID of the snapshot used as the source of the clone. If no ID is provided, the current active volume is used."),(0,l.kt)("td",{parentName:"tr",align:null},"Integer"),(0,l.kt)("td",{parentName:"tr",align:null},"Optional")))),(0,l.kt)("h2",{id:"return-value"},"Return value"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"asyncHandle")),(0,l.kt)("td",{parentName:"tr",align:null},"Handle value used to obtain the operation result"),(0,l.kt)("td",{parentName:"tr",align:null},"Integer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"cloneID")),(0,l.kt)("td",{parentName:"tr",align:null},"Clone ID for the newly cloned volume."),(0,l.kt)("td",{parentName:"tr",align:null},"Integer")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"curve")),(0,l.kt)("td",{parentName:"tr",align:null},"QoS curve value applied to the clone."),(0,l.kt)("td",{parentName:"tr",align:null},"Array of integers")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("code",null,"volumeID")),(0,l.kt)("td",{parentName:"tr",align:null},"Volume ID for the newly cloned volume."),(0,l.kt)("td",{parentName:"tr",align:null},"Integer")))),(0,l.kt)("h2",{id:"request-example"},"Request example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-JSON"},'{\n   "method": "CloneVolume",\n   "params": {\n      "volumeID" : 5,\n      "name"  : "mysqldata-snapshot1",\n      "access" : "readOnly"\n   },\n   "id" : 1\n}\n')),(0,l.kt)("h2",{id:"response-example"},"Response example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-JSON"},'{\n   "id" : 1,\n   "result" : {\n      "asyncHandle" : 1,\n      "cloneID: 3,\n      "curve" : {\n         "1048576" : 19200,\n         "131072" : 2400,\n         "16384" : 300,\n         "262144" : 4800,\n         "32768" : 600,\n         "4096" : 100,\n         "524288" : 9600,\n         "65536" : 1200,\n         "8192" : 160\n      },\n      "volumeID" : 202\n   }\n}\n')))}b.isMDXComponent=!0}}]);